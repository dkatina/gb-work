name: Flask CI 

on:
  push:
    branches: [main, master]

permissions:
  contents: write # Ensuring that GitHub Actions has write permissions

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Create virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install pip-tools
        run: |
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install pip-tools
      
      - name: Compile updated requirements
        run: |
          source venv/bin/activate
          pip-compile requirements.in --output-file=requirements.txt

      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Set DB_USER and DB_PASSWORD from secrets
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV

      - name: Check if requirements.txt is updated
        run: |
          git diff --exit-code requirements.txt || echo "requirements.txt has been updated"

      - name: Commit and push updated requirements.txt
        run: |
          git add requirements.txt
          git diff --quiet --exit-code || git commit -m "Update requirements.txt with new versions."
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.ref }}  # Using the token to authenticate

      - name: Upload requirements.txt
        uses: actions/upload-artifact@v4
        with:
          name: requirements.txt
          path: requirements.txt

      - name: Print debugging information
        run: |
          echo "Python version: $(python --version)"
          echo "Working Directory: $(pwd)"
          echo "Contents of Working Directory: $(ls -l)"
          echo "Contents of site-packages: $(ls -l venv/lib/python3.8/site-packages)"

  test:
    needs: build
    runs-on: ubuntu-latest
    env:
      FLASK_ENV: testing # Setting the Flask environment to testing
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      
      - name: Create virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Download requirements.txt
        uses: actions/download-artifact@v4
        with:
          name: requirements.txt

      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run tests
        run: |
          source venv/bin/activate
          python -m unittest discover -s tests -p 'test_*.py'